// Generated by view binder compiler. Do not edit!
package com.robotforest.launcher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.robotforest.launcher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnAbout;

  @NonNull
  public final Button btnAllFiles;

  @NonNull
  public final Button btnBattery;

  @NonNull
  public final Button btnCopyTermuxCmd;

  @NonNull
  public final Button btnLaunchNative;

  @NonNull
  public final Button btnOpenTermux;

  @NonNull
  public final Button btnOverlay;

  @NonNull
  public final Button btnPickFolder;

  @NonNull
  public final Button btnQuit;

  @NonNull
  public final TextView txtStatus;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull Button btnAbout,
      @NonNull Button btnAllFiles, @NonNull Button btnBattery, @NonNull Button btnCopyTermuxCmd,
      @NonNull Button btnLaunchNative, @NonNull Button btnOpenTermux, @NonNull Button btnOverlay,
      @NonNull Button btnPickFolder, @NonNull Button btnQuit, @NonNull TextView txtStatus) {
    this.rootView = rootView;
    this.btnAbout = btnAbout;
    this.btnAllFiles = btnAllFiles;
    this.btnBattery = btnBattery;
    this.btnCopyTermuxCmd = btnCopyTermuxCmd;
    this.btnLaunchNative = btnLaunchNative;
    this.btnOpenTermux = btnOpenTermux;
    this.btnOverlay = btnOverlay;
    this.btnPickFolder = btnPickFolder;
    this.btnQuit = btnQuit;
    this.txtStatus = txtStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_about;
      Button btnAbout = ViewBindings.findChildViewById(rootView, id);
      if (btnAbout == null) {
        break missingId;
      }

      id = R.id.btn_all_files;
      Button btnAllFiles = ViewBindings.findChildViewById(rootView, id);
      if (btnAllFiles == null) {
        break missingId;
      }

      id = R.id.btn_battery;
      Button btnBattery = ViewBindings.findChildViewById(rootView, id);
      if (btnBattery == null) {
        break missingId;
      }

      id = R.id.btn_copy_termux_cmd;
      Button btnCopyTermuxCmd = ViewBindings.findChildViewById(rootView, id);
      if (btnCopyTermuxCmd == null) {
        break missingId;
      }

      id = R.id.btn_launch_native;
      Button btnLaunchNative = ViewBindings.findChildViewById(rootView, id);
      if (btnLaunchNative == null) {
        break missingId;
      }

      id = R.id.btn_open_termux;
      Button btnOpenTermux = ViewBindings.findChildViewById(rootView, id);
      if (btnOpenTermux == null) {
        break missingId;
      }

      id = R.id.btn_overlay;
      Button btnOverlay = ViewBindings.findChildViewById(rootView, id);
      if (btnOverlay == null) {
        break missingId;
      }

      id = R.id.btn_pick_folder;
      Button btnPickFolder = ViewBindings.findChildViewById(rootView, id);
      if (btnPickFolder == null) {
        break missingId;
      }

      id = R.id.btn_quit;
      Button btnQuit = ViewBindings.findChildViewById(rootView, id);
      if (btnQuit == null) {
        break missingId;
      }

      id = R.id.txt_status;
      TextView txtStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtStatus == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, btnAbout, btnAllFiles, btnBattery,
          btnCopyTermuxCmd, btnLaunchNative, btnOpenTermux, btnOverlay, btnPickFolder, btnQuit,
          txtStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
